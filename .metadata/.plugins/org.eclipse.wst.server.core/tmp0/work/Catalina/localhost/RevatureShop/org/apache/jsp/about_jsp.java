/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.24
 * Generated at: 2024-08-31 19:32:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class about_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Index Page</title>\r\n");
      out.write("    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"CSS/about.css\"/>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <header class=\"header\">\r\n");
      out.write("        <a href=\"#\" class=\"logo\">Portfolio</a>\r\n");
      out.write("        <nav class=\"navbar\">\r\n");
      out.write("            <button class=\"butt\">\r\n");
      out.write("                <a href=\"#\" style=\"--i-1;\">Home</a>\r\n");
      out.write("                <a href=\"#\" style=\"--i-2;\">About</a>\r\n");
      out.write("                <a href=\"#\" style=\"--i-3;\">Skills</a>\r\n");
      out.write("                <a href=\"#\" style=\"--i-4;\">Project</a>\r\n");
      out.write("                <a href=\"#\" style=\"--i-5;\">Contact</a>\r\n");
      out.write("            </button>\r\n");
      out.write("        </nav>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <section class=\"home\">\r\n");
      out.write("        <div class=\"home-content\">\r\n");
      out.write("            <h3>Hello, It's Me</h3>\r\n");
      out.write("            <h1>Asmit Suragond</h1>\r\n");
      out.write("            <h3>And I'm a <span class=\"multiple-text\"></span></h3>\r\n");
      out.write("            <p>\r\n");
      out.write("                Asmit Suragond is a highly motivated individual who has earned a Bachelor's degree in Computer Engineering. As a B.Tech in Computer Engineering, Asmit has a strong foundation in various aspects of computer engineering, including programming languages, computer networks, computer architecture, algorithms, and software engineering.\r\n");
      out.write("                Computer Engineering is a branch of engineering that integrates the principles of computer science and electrical engineering to develop computer systems and networks.\r\n");
      out.write("                As a B.Tech in Computer Engineering, Asmit has the knowledge and skills to design, develop, test, and maintain computer systems and software. He has the ability to understand and analyze complex software systems, as well as the knowledge to develop new software and hardware solutions. He is equipped with problem-solving skills and can apply his technical knowledge to real-world situations.\r\n");
      out.write("            </p>\r\n");
      out.write("            <div class=\"social-media\">\r\n");
      out.write("                <a href=\"https://www.facebook.com/asmit.suragond\" style=\"--i-7;\"><i class='bx bxl-facebook'></i></a>\r\n");
      out.write("                <a href=\"https://twitter.com/suragondasmit15?t=1-NXZPIhPc-sR9inAB8_7Q&s=09\" style=\"--i-8;\"><i class='bx bxl-twitter'></i></a>\r\n");
      out.write("                <a href=\"https://www.instagram.com/asmit_suragond_mh10/\" style=\"--i-9;\"><i class='bx bxl-instagram'></i></a>\r\n");
      out.write("                <a href=\"https://www.linkedin.com/in/asmit-suragond-2389a01a2\" style=\"--i-10;\"><i class='bx bxl-linkedin-square'></i></a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <a href=\"#\" class=\"btn\">Download Resume</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"home-img\">\r\n");
      out.write("            \r\n");
      out.write("              <img src=\"Images/piccs.png\" class=\"img-fluid\" alt=\"Products\">\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/typed.js@2.0.12\"></script>\r\n");
      out.write("    <script src=\"<c:url value='/script.js' />\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
